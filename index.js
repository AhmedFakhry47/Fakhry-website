import Head from 'next/head'
import Image from 'next/image'
import { Inter } from 'next/font/google'
import styles from '/styles/Home.module.css'
import Landing from 'Components/Landing'
import About from 'Components/About'
import Skill from 'Components/Skill'
import Projects from 'Components/Projects'
import Papers from 'Components/Papers'
import Contact from 'Components/Contact'
import TimelineSection from 'Components/TimelineSection'
import Footer from 'Components/Footer'
import React from 'react'
import { Box, Tabs, Tab, Typography, LinkTab, Grid, Button, Container, Paper, List, ListItem, ListItemText, ListItemIcon, Avatar, } from '@mui/material'
import { ColorModeContext } from '../../public/theme'
import { styled, useTheme, alpha } from '@mui/material/styles';
import GitHubIcon from '@mui/icons-material/GitHub';
import { projectsdata } from '../../data'


export default function Home({ projects }) {
  const colorMode = React.useContext(ColorModeContext);
  const theme = useTheme();
  return (
    <>
      <Head>
        <title>Ahmed Fakhry</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/robot.jpg" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link href="https://fonts.googleapis.com/css2?family=Sofia+Sans+Condensed:ital,wght@0,1;0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;0,1000;1,1;1,200;1,300;1,500;1,600;1,700;1,800;1,900;1,1000&family=Source+Sans+Pro:ital,wght@0,200;0,300;0,400;0,600;0,700;0,900;1,200;1,300;1,400;1,600;1,700;1,900&display=swap" rel="stylesheet" />
      </Head>
      <Landing />
      <About />
      <Skill />
      {/* //projects section */}
      <Box id='projects' py="50px" my="50px">
        <Container>
          <Typography variant='h2' sx={{ textAlign: "center", fontWeight: "bold" }}>Personal Projects</Typography>
          <Typography variant='h6' sx={{ textAlign: "center" }}>Here you can see some of the projects I've done on my own time.</Typography>
          <Grid container sx={{ my: "50px" }} spacing={3}>
            {projects.map(project => (
              <Projects key={project.id} {...project} />

            ))}
            {/* <Grid item xs={12} md={4}>
              <Box className={styles.projectBox}>
                <Typography variant='h5' sx={{ color: "secondary.main" }}>Project Title</Typography>
                <Typography variant='h6'>A collection of various neural network models in TensorFlow.</Typography>
              </Box>
            </Grid>
            <Grid item xs={12} md={4}>
              <Box className={styles.projectBox}>
                <Typography variant='h5' sx={{ color: "secondary.main" }}>Project Title</Typography>
                <Typography variant='h6'>A collection of various neural network models in TensorFlow.</Typography>
              </Box>
            </Grid>
            <Grid item xs={12} md={4}>
              <Box className={styles.projectBox}>
                <Typography variant='h5' sx={{ color: "secondary.main" }}>Project Title</Typography>
                <Typography variant='h6'>A collection of various neural network models in TensorFlow.</Typography>
              </Box>
            </Grid> */}
          </Grid>
          <Box display='flex' justifyContent="center" flexDirection="column" textAlign="center" marginTop="10px">
            <Typography variant='h4'>To see more of my projects...</Typography>
            <button className={styles.normalButton}><a href='https://github.com/AhmedFakhry47' target="_blank">Visit My GitHub<GitHubIcon /></a></button>
          </Box>
        </Container>
      </Box>

      <Papers />
      <TimelineSection />
      <Contact />
      <Footer />

    </>
  )
}

export const getStaticProps = async () => {
  // const res = await fetch("data.projects?_limit=2");
  // const data = await res.json();

  return {
    props: {
      projects: projectsdata,
    }
  }
}
